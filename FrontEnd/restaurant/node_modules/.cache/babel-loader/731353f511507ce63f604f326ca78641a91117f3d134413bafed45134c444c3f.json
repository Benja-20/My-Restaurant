{"ast":null,"code":"import axios from 'axios';\nimport { refreshToken } from './users/usersAPI';\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000'\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshResponse = await refreshToken({\n        refresh: localStorage.getItem('refresh')\n      });\n      localStorage.setItem('access', refreshResponse.access);\n      originalRequest.headers.Authorization = `Bearer ${refreshResponse.access}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      console.error('Refresh token failed:', refreshError);\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","refreshToken","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","originalRequest","status","_retry","refreshResponse","refresh","setItem","access","refreshError","console","Promise","reject"],"sources":["D:/Coding/Coding/PortFolio/Restaurant-3/FrontEnd/restaurant/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { refreshToken } from './users/usersAPI';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000',\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('access');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use(\r\n    response => response,\r\n    async error => {\r\n        const originalRequest = error.config;\r\n        if (error.response?.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n            try {\r\n                const refreshResponse = await refreshToken({\r\n                    refresh: localStorage.getItem('refresh')\r\n                });\r\n                localStorage.setItem('access', refreshResponse.access);\r\n                originalRequest.headers.Authorization = `Bearer ${refreshResponse.access}`;\r\n                return api(originalRequest);\r\n            } catch (refreshError) {\r\n                console.error('Refresh token failed:', refreshError);\r\n                return Promise.reject(refreshError);\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEFN,GAAG,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CACzBO,QAAQ,IAAIA,QAAQ,EACpB,MAAMC,KAAK,IAAI;EAAA,IAAAC,eAAA;EACX,MAAMC,eAAe,GAAGF,KAAK,CAACP,MAAM;EACpC,IAAI,EAAAQ,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACA,MAAMC,eAAe,GAAG,MAAMnB,YAAY,CAAC;QACvCoB,OAAO,EAAEX,YAAY,CAACC,OAAO,CAAC,SAAS;MAC3C,CAAC,CAAC;MACFD,YAAY,CAACY,OAAO,CAAC,QAAQ,EAAEF,eAAe,CAACG,MAAM,CAAC;MACtDN,eAAe,CAACL,OAAO,CAACC,aAAa,GAAG,UAAUO,eAAe,CAACG,MAAM,EAAE;MAC1E,OAAOrB,GAAG,CAACe,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOO,YAAY,EAAE;MACnBC,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAES,YAAY,CAAC;MACpD,OAAOE,OAAO,CAACC,MAAM,CAACH,YAAY,CAAC;IACvC;EACJ;EACA,OAAOE,OAAO,CAACC,MAAM,CAACZ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}